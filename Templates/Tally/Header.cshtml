@model InvoiceData.Root;
@using InvoiceData;
@using System.Collections.Generic;

@functions {
    private readonly Dictionary<string, Setting> _settingCache = new Dictionary<string, Setting>();

    public string GetLabel(string settingName)
    {
        if (!_settingCache.TryGetValue(settingName, out var setting))
        {
            setting = Model.Settings?.GetType().GetProperty(settingName)?.GetValue(Model.Settings) as Setting;
            _settingCache[settingName] = setting ??= new Setting();
        }
        return setting?.Display == true ? setting?.Label ?? string.Empty : string.Empty;
    }

    public bool GetDisplayStatus(string settingName)
    {
        if (!_settingCache.TryGetValue(settingName, out var setting))
        {
            setting = Model.Settings?.GetType().GetProperty(settingName)?.GetValue(Model.Settings) as Setting;
            _settingCache[settingName] = setting ??= new Setting();
        }
        return setting?.Display == true;
    }
}

<header id="header">
    <table>
        <tbody>
            <tr>
                <td class="p-0 border-none">
                    <table>
                        <tbody>
                            <tr>
                                <td class="border-none">
                                    @if (GetDisplayStatus("FormNameInvoice") || GetDisplayStatus("FormNameTaxInvoice"))
                                    {
                                        <h1 class="text-center pdf-title font-weight-500">
                                            @if (GetDisplayStatus("FormNameTaxInvoice"))
                                            {
                                                @GetLabel("FormNameTaxInvoice")
                                            }
                                            else
                                            {
                                                @GetLabel("FormNameInvoice")
                                            }
                                        </h1>
                                    }
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </td>
            </tr>
        </tbody>
    </table>
</header>

@* This Script is used to set header and footer height to css variable *@
<script>
    function setDynamicHeaderFooterHeight() {
        const header = document.getElementById('header');
        const footer = document.getElementById('footer');

        if (header) {
            document.documentElement.style.setProperty('--header-height', `${header.offsetHeight}px`);
        }
        if (footer) {
            document.documentElement.style.setProperty('--footer-height', `${footer.offsetHeight}px`);
        }
    }

    window.addEventListener('load', function () {
        setDynamicHeaderFooterHeight();
    });
    window.addEventListener('resize', setDynamicHeaderFooterHeight);
</script>
